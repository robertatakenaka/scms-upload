# Generated by Django 5.0.3 on 2024-04-10 22:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("upload", "0003_package_journal_alter_errorresolution_action_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BaseXMLValidationResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        blank=True,
                        help_text="Item is being analyzed",
                        max_length=128,
                        null=True,
                        verbose_name="Subject",
                    ),
                ),
                (
                    "data",
                    models.JSONField(
                        blank=True, default=dict, null=True, verbose_name="Data"
                    ),
                ),
                (
                    "message",
                    models.TextField(blank=True, null=True, verbose_name="Message"),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("success", "success"),
                            ("failure", "failure"),
                            ("unknown", "unknown"),
                        ],
                        default="unknown",
                        max_length=16,
                        null=True,
                        verbose_name="Result",
                    ),
                ),
                (
                    "attribute",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        verbose_name="Subject Attribute",
                    ),
                ),
                (
                    "parent",
                    models.CharField(
                        blank=True, max_length=32, null=True, verbose_name="Parent"
                    ),
                ),
                (
                    "parent_id",
                    models.CharField(
                        blank=True, max_length=8, null=True, verbose_name="Parent id"
                    ),
                ),
                (
                    "focus",
                    models.CharField(
                        blank=True,
                        max_length=64,
                        null=True,
                        verbose_name="Analysis focus",
                    ),
                ),
                (
                    "validation_type",
                    models.CharField(max_length=16, verbose_name="Validation type"),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_last_mod_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updater",
                    ),
                ),
            ],
            options={
                "verbose_name": "XML validation result",
                "verbose_name_plural": "XML validation results",
            },
        ),
        migrations.CreateModel(
            name="ErrorNegativeReaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "justification",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        null=True,
                        verbose_name="Non-error justification",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_last_mod_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updater",
                    ),
                ),
            ],
            options={
                "verbose_name": "Non-error justification",
                "verbose_name_plural": "Non-error justifications",
                "permissions": (
                    (
                        "send_validation_error_resolution",
                        "Can send justification not to fix",
                    ),
                ),
            },
        ),
        migrations.CreateModel(
            name="ErrorNegativeReactionDecision",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "decision",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("accepted-with-error", "Accepted with errors"),
                            ("accepted", "Accepted"),
                            ("to-fix", "Correction required"),
                        ],
                        default="to-fix",
                        max_length=32,
                        null=True,
                        verbose_name="Decision",
                    ),
                ),
                (
                    "decision_argument",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        null=True,
                        verbose_name="Decision argument",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "error_negative_reaction",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="qa_decision",
                        to="upload.errornegativereaction",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_last_mod_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updater",
                    ),
                ),
            ],
            options={
                "permissions": (
                    (
                        "analyse_validation_error_resolution",
                        "Can decide about the correction demand",
                    ),
                ),
            },
        ),
        migrations.CreateModel(
            name="ValidationReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="Title"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            (
                                "journal-incompatibility",
                                "ARTICLE_JOURNAL_COMPATIBILITY",
                            ),
                            ("article-is-not-new", "ARTICLE_IS_NOT_NEW"),
                            ("xml-format", "XML_FORMAT"),
                            ("xml-content", "VAL_CAT_XML_CONTENT"),
                            ("group", "VAL_CAT_GROUP_DATA"),
                            ("bibliometrics-data", "BIBLIOMETRICS_DATA"),
                            ("services-data", "SERVICES_DATA"),
                            ("data-consistency", "DATA_CONSISTENCY"),
                            ("criteria-issues", "CRITERIA_ISSUES"),
                            ("asset", "ASSET"),
                            ("rendition", "RENDITION"),
                        ],
                        max_length=32,
                        verbose_name="Validation category",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "package",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="validation_report",
                        to="upload.package",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_last_mod_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updater",
                    ),
                ),
            ],
            options={
                "verbose_name": "Validation Report",
                "verbose_name_plural": "Validation Reports",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PkgValidationResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        blank=True,
                        help_text="Item is being analyzed",
                        max_length=128,
                        null=True,
                        verbose_name="Subject",
                    ),
                ),
                (
                    "data",
                    models.JSONField(
                        blank=True, default=dict, null=True, verbose_name="Data"
                    ),
                ),
                (
                    "message",
                    models.TextField(blank=True, null=True, verbose_name="Message"),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("success", "success"),
                            ("failure", "failure"),
                            ("unknown", "unknown"),
                        ],
                        default="unknown",
                        max_length=16,
                        null=True,
                        verbose_name="Result",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_last_mod_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updater",
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pkg_validation_result",
                        to="upload.validationreport",
                    ),
                ),
            ],
            options={
                "verbose_name": "Validation result",
                "verbose_name_plural": "Validation results",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="XMLErrorReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="Title"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            (
                                "journal-incompatibility",
                                "ARTICLE_JOURNAL_COMPATIBILITY",
                            ),
                            ("article-is-not-new", "ARTICLE_IS_NOT_NEW"),
                            ("xml-format", "XML_FORMAT"),
                            ("xml-content", "VAL_CAT_XML_CONTENT"),
                            ("group", "VAL_CAT_GROUP_DATA"),
                            ("bibliometrics-data", "BIBLIOMETRICS_DATA"),
                            ("services-data", "SERVICES_DATA"),
                            ("data-consistency", "DATA_CONSISTENCY"),
                            ("criteria-issues", "CRITERIA_ISSUES"),
                            ("asset", "ASSET"),
                            ("rendition", "RENDITION"),
                        ],
                        max_length=32,
                        verbose_name="Validation category",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "package",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="xml_error_report",
                        to="upload.package",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_last_mod_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updater",
                    ),
                ),
            ],
            options={
                "verbose_name": "Validation Report",
                "verbose_name_plural": "Validation Reports",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="XMLInfoReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="Title"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            (
                                "journal-incompatibility",
                                "ARTICLE_JOURNAL_COMPATIBILITY",
                            ),
                            ("article-is-not-new", "ARTICLE_IS_NOT_NEW"),
                            ("xml-format", "XML_FORMAT"),
                            ("xml-content", "VAL_CAT_XML_CONTENT"),
                            ("group", "VAL_CAT_GROUP_DATA"),
                            ("bibliometrics-data", "BIBLIOMETRICS_DATA"),
                            ("services-data", "SERVICES_DATA"),
                            ("data-consistency", "DATA_CONSISTENCY"),
                            ("criteria-issues", "CRITERIA_ISSUES"),
                            ("asset", "ASSET"),
                            ("rendition", "RENDITION"),
                        ],
                        max_length=32,
                        verbose_name="Validation category",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "package",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="xml_info_report",
                        to="upload.package",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_last_mod_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updater",
                    ),
                ),
            ],
            options={
                "verbose_name": "Validation Report",
                "verbose_name_plural": "Validation Reports",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="XMLError",
            fields=[
                (
                    "basexmlvalidationresult_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="upload.basexmlvalidationresult",
                    ),
                ),
                (
                    "expected_value",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Expected value"
                    ),
                ),
                (
                    "got_value",
                    models.JSONField(blank=True, null=True, verbose_name="Got value"),
                ),
                (
                    "advice",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="Advice"
                    ),
                ),
                (
                    "reaction",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("fix", "I will fix this error"),
                            ("absence", "Data is absent"),
                            ("justify", "I am adding a justification not to correct"),
                        ],
                        default="fix",
                        max_length=32,
                        null=True,
                        verbose_name="Reaction",
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="xml_error",
                        to="upload.xmlerrorreport",
                    ),
                ),
            ],
            options={
                "verbose_name": "XML error",
                "verbose_name_plural": "XML errors",
            },
            bases=("upload.basexmlvalidationresult", models.Model),
        ),
        migrations.AddField(
            model_name="errornegativereaction",
            name="error",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="non_error_justification",
                to="upload.xmlerror",
            ),
        ),
        migrations.CreateModel(
            name="XMLInfo",
            fields=[
                (
                    "basexmlvalidationresult_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="upload.basexmlvalidationresult",
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="xml_info",
                        to="upload.xmlinforeport",
                    ),
                ),
            ],
            options={
                "verbose_name": "XML info",
                "verbose_name_plural": "XML infos",
            },
            bases=("upload.basexmlvalidationresult",),
        ),
        migrations.AddIndex(
            model_name="basexmlvalidationresult",
            index=models.Index(
                fields=["attribute"], name="upload_base_attribu_0d2852_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="basexmlvalidationresult",
            index=models.Index(
                fields=["validation_type"], name="upload_base_validat_2a2026_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="basexmlvalidationresult",
            index=models.Index(fields=["focus"], name="upload_base_focus_bf8b77_idx"),
        ),
        migrations.AddIndex(
            model_name="validationreport",
            index=models.Index(fields=["title"], name="upload_vali_title_30e1ae_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="validationreport",
            unique_together={("package", "title")},
        ),
        migrations.AddIndex(
            model_name="pkgvalidationresult",
            index=models.Index(
                fields=["subject"], name="upload_pkgv_subject_8d040f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pkgvalidationresult",
            index=models.Index(fields=["status"], name="upload_pkgv_status_13885b_idx"),
        ),
        migrations.AddIndex(
            model_name="xmlerrorreport",
            index=models.Index(fields=["title"], name="upload_xmle_title_32a640_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="xmlerrorreport",
            unique_together={("package", "title")},
        ),
        migrations.AddIndex(
            model_name="xmlinforeport",
            index=models.Index(fields=["title"], name="upload_xmli_title_9c8688_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="xmlinforeport",
            unique_together={("package", "title")},
        ),
        migrations.AddIndex(
            model_name="xmlerror",
            index=models.Index(
                fields=["reaction"], name="upload_xmle_reactio_07a23a_idx"
            ),
        ),
    ]
