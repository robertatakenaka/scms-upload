# Generated by Django 5.0.3 on 2024-07-25 20:50

import django.db.models.deletion
import modelcluster.fields
import upload.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("article", "0003_article_sections_articletitle_language_and_more"),
        ("collection", "0003_websiteconfigurationendpoint"),
        ("issue", "0005_tocsection_section_tocsection_toc_and_more"),
        ("journal", "0004_remove_journal_journal_acron_and_more"),
        ("package", "0003_remove_spspkg_components_alter_spspkg_origin_and_more"),
        ("team", "0001_initial"),
        ("upload", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BaseXMLValidationResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        blank=True,
                        help_text="Item is being analyzed",
                        max_length=64,
                        null=True,
                        verbose_name="Subject",
                    ),
                ),
                (
                    "data",
                    models.JSONField(
                        blank=True, default=dict, null=True, verbose_name="Data"
                    ),
                ),
                (
                    "message",
                    models.TextField(blank=True, null=True, verbose_name="Message"),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("CRITICAL", "critical"),
                            ("ERROR", "error"),
                            ("UKN", "unknown"),
                            ("WARN", "warning"),
                            ("OK", "ok"),
                        ],
                        default="UKN",
                        max_length=8,
                        null=True,
                        verbose_name="Result",
                    ),
                ),
                (
                    "attribute",
                    models.CharField(
                        blank=True,
                        max_length=64,
                        null=True,
                        verbose_name="Subject Attribute",
                    ),
                ),
                (
                    "focus",
                    models.CharField(
                        blank=True,
                        max_length=64,
                        null=True,
                        verbose_name="Analysis focus",
                    ),
                ),
                (
                    "validation_type",
                    models.CharField(max_length=16, verbose_name="Validation type"),
                ),
                (
                    "parent",
                    models.CharField(
                        blank=True, max_length=16, null=True, verbose_name="Parent"
                    ),
                ),
                (
                    "parent_id",
                    models.CharField(
                        blank=True, max_length=8, null=True, verbose_name="Parent id"
                    ),
                ),
                (
                    "parent_article_type",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        verbose_name="Parent article type",
                    ),
                ),
            ],
            options={
                "verbose_name": "XML validation result",
                "verbose_name_plural": "XML validation results",
            },
        ),
        migrations.CreateModel(
            name="PkgValidationResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        blank=True,
                        help_text="Item is being analyzed",
                        max_length=64,
                        null=True,
                        verbose_name="Subject",
                    ),
                ),
                (
                    "data",
                    models.JSONField(
                        blank=True, default=dict, null=True, verbose_name="Data"
                    ),
                ),
                (
                    "message",
                    models.TextField(blank=True, null=True, verbose_name="Message"),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("CRITICAL", "critical"),
                            ("ERROR", "error"),
                            ("UKN", "unknown"),
                            ("WARN", "warning"),
                            ("OK", "ok"),
                        ],
                        default="UKN",
                        max_length=8,
                        null=True,
                        verbose_name="Result",
                    ),
                ),
            ],
            options={
                "verbose_name": "Validation result",
                "verbose_name_plural": "Validation results",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UploadValidator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "max_xml_warnings_percentage",
                    models.DecimalField(decimal_places=2, default=0.1, max_digits=5),
                ),
                (
                    "max_xml_errors_percentage",
                    models.DecimalField(decimal_places=2, default=0.1, max_digits=5),
                ),
                (
                    "max_impossible_to_fix_percentage",
                    models.DecimalField(decimal_places=2, default=0.05, max_digits=5),
                ),
                (
                    "days_in_qa_before_publication",
                    models.PositiveSmallIntegerField(
                        default=0,
                        help_text="Enter the number of days for quality control before publishing. Articles are automatically visible after this time.",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ValidationReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="Title"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            (
                                "journal-incompatibility",
                                "ARTICLE_JOURNAL_COMPATIBILITY",
                            ),
                            ("article-is-not-new", "ARTICLE_IS_NOT_NEW"),
                            ("xml-format", "XML_FORMAT"),
                            ("xml-style", "XML_STYLE"),
                            ("xml-content", "VAL_CAT_XML_CONTENT"),
                            ("group", "VAL_CAT_GROUP_DATA"),
                            ("bibliometrics-data", "BIBLIOMETRICS_DATA"),
                            ("services-data", "SERVICES_DATA"),
                            ("data-consistency", "DATA_CONSISTENCY"),
                            ("criteria-issues", "CRITERIA_ISSUES"),
                            ("asset", "ASSET"),
                            ("rendition", "RENDITION"),
                            ("package-file", "PACKAGE_FILE"),
                        ],
                        max_length=32,
                        verbose_name="Validation category",
                    ),
                ),
                (
                    "creation",
                    models.CharField(
                        choices=[("done", "done"), ("doing", "doing"), ("", "")],
                        default="",
                        max_length=16,
                        verbose_name="creation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Validation Report",
                "verbose_name_plural": "Validation Reports",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="XMLErrorReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="Title"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            (
                                "journal-incompatibility",
                                "ARTICLE_JOURNAL_COMPATIBILITY",
                            ),
                            ("article-is-not-new", "ARTICLE_IS_NOT_NEW"),
                            ("xml-format", "XML_FORMAT"),
                            ("xml-style", "XML_STYLE"),
                            ("xml-content", "VAL_CAT_XML_CONTENT"),
                            ("group", "VAL_CAT_GROUP_DATA"),
                            ("bibliometrics-data", "BIBLIOMETRICS_DATA"),
                            ("services-data", "SERVICES_DATA"),
                            ("data-consistency", "DATA_CONSISTENCY"),
                            ("criteria-issues", "CRITERIA_ISSUES"),
                            ("asset", "ASSET"),
                            ("rendition", "RENDITION"),
                            ("package-file", "PACKAGE_FILE"),
                        ],
                        max_length=32,
                        verbose_name="Validation category",
                    ),
                ),
                (
                    "creation",
                    models.CharField(
                        choices=[("done", "done"), ("doing", "doing"), ("", "")],
                        default="",
                        max_length=16,
                        verbose_name="creation",
                    ),
                ),
                (
                    "xml_producer_ack",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        null=True,
                        verbose_name="The XML producer finished adding a response to each error.",
                    ),
                ),
            ],
            options={
                "verbose_name": "XML Error Report",
                "verbose_name_plural": "XML Error Reports",
            },
        ),
        migrations.CreateModel(
            name="XMLInfoReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="Title"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            (
                                "journal-incompatibility",
                                "ARTICLE_JOURNAL_COMPATIBILITY",
                            ),
                            ("article-is-not-new", "ARTICLE_IS_NOT_NEW"),
                            ("xml-format", "XML_FORMAT"),
                            ("xml-style", "XML_STYLE"),
                            ("xml-content", "VAL_CAT_XML_CONTENT"),
                            ("group", "VAL_CAT_GROUP_DATA"),
                            ("bibliometrics-data", "BIBLIOMETRICS_DATA"),
                            ("services-data", "SERVICES_DATA"),
                            ("data-consistency", "DATA_CONSISTENCY"),
                            ("criteria-issues", "CRITERIA_ISSUES"),
                            ("asset", "ASSET"),
                            ("rendition", "RENDITION"),
                            ("package-file", "PACKAGE_FILE"),
                        ],
                        max_length=32,
                        verbose_name="Validation category",
                    ),
                ),
                (
                    "creation",
                    models.CharField(
                        choices=[("done", "done"), ("doing", "doing"), ("", "")],
                        default="",
                        max_length=16,
                        verbose_name="creation",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=upload.models.upload_package_directory_path,
                        verbose_name="Report File",
                    ),
                ),
            ],
            options={
                "verbose_name": "Validation Report",
                "verbose_name_plural": "Validation Reports",
                "abstract": False,
            },
        ),
        migrations.RemoveField(
            model_name="errorresolution",
            name="creator",
        ),
        migrations.RemoveField(
            model_name="errorresolution",
            name="updated_by",
        ),
        migrations.RemoveField(
            model_name="errorresolution",
            name="validation_result",
        ),
        migrations.RemoveField(
            model_name="errorresolutionopinion",
            name="creator",
        ),
        migrations.RemoveField(
            model_name="errorresolutionopinion",
            name="updated_by",
        ),
        migrations.RemoveField(
            model_name="errorresolutionopinion",
            name="validation_result",
        ),
        migrations.RemoveField(
            model_name="validationresult",
            name="package",
        ),
        migrations.CreateModel(
            name="ApprovedPackage",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("upload.package",),
        ),
        migrations.AddField(
            model_name="package",
            name="analyst",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="team.collectionteammember",
            ),
        ),
        migrations.AddField(
            model_name="package",
            name="approved_date",
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="package",
            name="blocking_errors",
            field=models.PositiveSmallIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="package",
            name="contested_xml_errors_percentage",
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
        ),
        migrations.AddField(
            model_name="package",
            name="declared_impossible_to_fix_percentage",
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
        ),
        migrations.AddField(
            model_name="package",
            name="journal",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="journal.journal",
            ),
        ),
        migrations.AddField(
            model_name="package",
            name="name",
            field=models.CharField(
                blank=True, max_length=32, null=True, verbose_name="SPS Package name"
            ),
        ),
        migrations.AddField(
            model_name="package",
            name="numbers",
            field=models.JSONField(default={}, null=True),
        ),
        migrations.AddField(
            model_name="package",
            name="order",
            field=models.PositiveSmallIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="package",
            name="pid_v2",
            field=models.CharField(blank=True, max_length=23, null=True),
        ),
        migrations.AddField(
            model_name="package",
            name="qa_decision",
            field=models.CharField(
                blank=True,
                choices=[
                    ("pending-correction", "Pending for correction"),
                    ("rejected", "Rejeitado"),
                    ("approved", "Aprovado"),
                    ("approved-with-errors", "Approved with errors"),
                ],
                max_length=32,
                null=True,
                verbose_name="Quality analysis decision",
            ),
        ),
        migrations.AddField(
            model_name="package",
            name="sps_pkg",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="package.spspkg",
            ),
        ),
        migrations.AddField(
            model_name="package",
            name="website_pub_date",
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="package",
            name="xml_errors_percentage",
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
        ),
        migrations.AddField(
            model_name="package",
            name="xml_pub_date",
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="package",
            name="xml_warnings_percentage",
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
        ),
        migrations.AlterField(
            model_name="package",
            name="file",
            field=models.FileField(
                upload_to=upload.models.upload_package_directory_path,
                verbose_name="Package File",
            ),
        ),
        migrations.AlterField(
            model_name="package",
            name="status",
            field=models.CharField(
                choices=[
                    ("submitted", "Submetido"),
                    ("enqueued-for-validation", "Enqueued for validation"),
                    ("validated-with-errors", "Validated with errors"),
                    ("approved-with-errors", "Approved with errors"),
                    ("pending-correction", "Pending for correction"),
                    ("pending-deposit", "Pending deposit"),
                    ("pending-qa-decision", "Pending quality analysis decision"),
                    ("pending-correction", "Pending for correction"),
                    ("rejected", "Rejeitado"),
                    ("approved", "Aprovado"),
                    ("prepare-sps-pkg", "Preparing SPS package"),
                    ("prepare-publication", "Prepare publication"),
                    ("ready-to-qa", "Ready to QA website"),
                    ("ready-to-publish", "Ready to publish"),
                    ("scheduled-publication", "Scheduled publication"),
                    ("published", "Publicado"),
                ],
                default="enqueued-for-validation",
                max_length=32,
                verbose_name="Status",
            ),
        ),
        migrations.AddIndex(
            model_name="package",
            index=models.Index(
                fields=["category"], name="upload_pack_categor_3c1eb9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="package",
            index=models.Index(fields=["name"], name="upload_pack_name_97273b_idx"),
        ),
        migrations.AddIndex(
            model_name="package",
            index=models.Index(fields=["status"], name="upload_pack_status_12c5cd_idx"),
        ),
        migrations.AddIndex(
            model_name="package",
            index=models.Index(
                fields=["qa_decision"], name="upload_pack_qa_deci_da84e6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="package",
            index=models.Index(
                fields=["xml_errors_percentage"], name="upload_pack_xml_err_857b31_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="package",
            index=models.Index(
                fields=["xml_warnings_percentage"],
                name="upload_pack_xml_war_0f8004_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="package",
            index=models.Index(
                fields=["contested_xml_errors_percentage"],
                name="upload_pack_contest_707651_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="package",
            index=models.Index(
                fields=["declared_impossible_to_fix_percentage"],
                name="upload_pack_declare_0363e9_idx",
            ),
        ),
        migrations.CreateModel(
            name="XMLError",
            fields=[
                (
                    "basexmlvalidationresult_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="upload.basexmlvalidationresult",
                    ),
                ),
                (
                    "expected_value",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Expected value"
                    ),
                ),
                (
                    "got_value",
                    models.JSONField(blank=True, null=True, verbose_name="Got value"),
                ),
                (
                    "advice",
                    models.CharField(
                        blank=True, max_length=256, null=True, verbose_name="Advice"
                    ),
                ),
                (
                    "reaction",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("to-fix", "XML producer will fix this error"),
                            (
                                "unable-to-fix",
                                "XML producer declares that correction is impossible",
                            ),
                            (
                                "not-to-fix",
                                "XML producer disagrees that there is an error",
                            ),
                        ],
                        default="to-fix",
                        max_length=16,
                        null=True,
                        verbose_name="Reaction",
                    ),
                ),
                (
                    "qa_decision",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("accepted-with-error", "Accepted with errors"),
                            ("accepted", "Accepted"),
                            ("to-fix", "Correction required"),
                        ],
                        max_length=32,
                        null=True,
                        verbose_name="Decision",
                    ),
                ),
            ],
            options={
                "verbose_name": "XML error",
                "verbose_name_plural": "XML errors",
            },
            bases=("upload.basexmlvalidationresult", models.Model),
        ),
        migrations.CreateModel(
            name="XMLInfo",
            fields=[
                (
                    "basexmlvalidationresult_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="upload.basexmlvalidationresult",
                    ),
                ),
            ],
            options={
                "verbose_name": "XML info",
                "verbose_name_plural": "XML infos",
            },
            bases=("upload.basexmlvalidationresult",),
        ),
        migrations.AddField(
            model_name="basexmlvalidationresult",
            name="creator",
            field=models.ForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_creator",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Creator",
            ),
        ),
        migrations.AddField(
            model_name="basexmlvalidationresult",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_last_mod_user",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updater",
            ),
        ),
        migrations.AddField(
            model_name="pkgvalidationresult",
            name="creator",
            field=models.ForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_creator",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Creator",
            ),
        ),
        migrations.AddField(
            model_name="pkgvalidationresult",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_last_mod_user",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updater",
            ),
        ),
        migrations.AddField(
            model_name="uploadvalidator",
            name="collection",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="collection.collection",
            ),
        ),
        migrations.AddField(
            model_name="uploadvalidator",
            name="creator",
            field=models.ForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_creator",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Creator",
            ),
        ),
        migrations.AddField(
            model_name="uploadvalidator",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_last_mod_user",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updater",
            ),
        ),
        migrations.AddField(
            model_name="validationreport",
            name="creator",
            field=models.ForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_creator",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Creator",
            ),
        ),
        migrations.AddField(
            model_name="validationreport",
            name="package",
            field=modelcluster.fields.ParentalKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="validation_report",
                to="upload.package",
            ),
        ),
        migrations.AddField(
            model_name="validationreport",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_last_mod_user",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updater",
            ),
        ),
        migrations.AddField(
            model_name="pkgvalidationresult",
            name="report",
            field=modelcluster.fields.ParentalKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="pkg_validation_result",
                to="upload.validationreport",
            ),
        ),
        migrations.AddField(
            model_name="xmlerrorreport",
            name="creator",
            field=models.ForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_creator",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Creator",
            ),
        ),
        migrations.AddField(
            model_name="xmlerrorreport",
            name="package",
            field=modelcluster.fields.ParentalKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="xml_error_report",
                to="upload.package",
            ),
        ),
        migrations.AddField(
            model_name="xmlerrorreport",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_last_mod_user",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updater",
            ),
        ),
        migrations.AddField(
            model_name="xmlinforeport",
            name="creator",
            field=models.ForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_creator",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Creator",
            ),
        ),
        migrations.AddField(
            model_name="xmlinforeport",
            name="package",
            field=modelcluster.fields.ParentalKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="xml_info_report",
                to="upload.package",
            ),
        ),
        migrations.AddField(
            model_name="xmlinforeport",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_last_mod_user",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updater",
            ),
        ),
        migrations.DeleteModel(
            name="ErrorResolution",
        ),
        migrations.DeleteModel(
            name="ErrorResolutionOpinion",
        ),
        migrations.DeleteModel(
            name="ValidationResult",
        ),
        migrations.AddField(
            model_name="xmlerror",
            name="report",
            field=modelcluster.fields.ParentalKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="xml_error",
                to="upload.xmlerrorreport",
            ),
        ),
        migrations.AddField(
            model_name="xmlinfo",
            name="report",
            field=modelcluster.fields.ParentalKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="xml_info",
                to="upload.xmlinforeport",
            ),
        ),
        migrations.AddIndex(
            model_name="basexmlvalidationresult",
            index=models.Index(
                fields=["attribute"], name="upload_base_attribu_0d2852_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="basexmlvalidationresult",
            index=models.Index(
                fields=["validation_type"], name="upload_base_validat_2a2026_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="basexmlvalidationresult",
            index=models.Index(fields=["focus"], name="upload_base_focus_bf8b77_idx"),
        ),
        migrations.AddIndex(
            model_name="validationreport",
            index=models.Index(fields=["title"], name="upload_vali_title_30e1ae_idx"),
        ),
        migrations.AddIndex(
            model_name="validationreport",
            index=models.Index(
                fields=["creation"], name="upload_vali_creatio_5f93a9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="validationreport",
            index=models.Index(
                fields=["category"], name="upload_vali_categor_5773a0_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="validationreport",
            unique_together={("package", "title")},
        ),
        migrations.AddIndex(
            model_name="pkgvalidationresult",
            index=models.Index(
                fields=["subject"], name="upload_pkgv_subject_8d040f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pkgvalidationresult",
            index=models.Index(fields=["status"], name="upload_pkgv_status_13885b_idx"),
        ),
        migrations.AddIndex(
            model_name="xmlerrorreport",
            index=models.Index(
                fields=["xml_producer_ack"], name="upload_xmle_xml_pro_58d37e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="xmlinforeport",
            index=models.Index(fields=["title"], name="upload_xmli_title_9c8688_idx"),
        ),
        migrations.AddIndex(
            model_name="xmlinforeport",
            index=models.Index(
                fields=["creation"], name="upload_xmli_creatio_fea4f2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="xmlinforeport",
            index=models.Index(
                fields=["category"], name="upload_xmli_categor_694408_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="xmlinforeport",
            unique_together={("package", "title")},
        ),
        migrations.AddIndex(
            model_name="xmlerror",
            index=models.Index(
                fields=["reaction"], name="upload_xmle_reactio_07a23a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="xmlerror",
            index=models.Index(
                fields=["qa_decision"], name="upload_xmle_qa_deci_e3f7ce_idx"
            ),
        ),
    ]
