# Generated by Django 5.0.3 on 2024-08-26 20:22

import django.db.models.deletion
import modelcluster.fields
import upload.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("article", "0002_remove_articleauthor_author_and_more"),
        ("collection", "0003_websiteconfigurationendpoint"),
        ("issue", "0004_issue_issue_pid_suffix_issue_order_toc_tocsection"),
        ("journal", "0004_journal_contact_address_journal_contact_location_and_more"),
        ("package", "0003_remove_spspkg_components_remove_spspkg_scheduled_and_more"),
        ("proc", "0005_alter_procreport_task_name"),
        ("team", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BaseXMLValidationResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        blank=True,
                        help_text="Item being analyzed",
                        max_length=64,
                        null=True,
                        verbose_name="Subject",
                    ),
                ),
                (
                    "data",
                    models.JSONField(
                        blank=True, default=dict, null=True, verbose_name="Data"
                    ),
                ),
                (
                    "message",
                    models.TextField(blank=True, null=True, verbose_name="Message"),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("CRITICAL", "critical"),
                            ("ERROR", "error"),
                            ("UKN", "unknown"),
                            ("WARN", "warning"),
                            ("OK", "ok"),
                        ],
                        default="UKN",
                        max_length=8,
                        null=True,
                        verbose_name="Result",
                    ),
                ),
                (
                    "attribute",
                    models.CharField(
                        blank=True,
                        max_length=64,
                        null=True,
                        verbose_name="Sub-item being analyzed",
                    ),
                ),
                (
                    "focus",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="Focus on"
                    ),
                ),
                (
                    "validation_type",
                    models.CharField(max_length=16, verbose_name="Validation type"),
                ),
                (
                    "parent",
                    models.CharField(
                        blank=True,
                        max_length=16,
                        null=True,
                        verbose_name="article / sub-article",
                    ),
                ),
                (
                    "parent_id",
                    models.CharField(
                        blank=True, max_length=8, null=True, verbose_name="@id"
                    ),
                ),
                (
                    "parent_article_type",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        verbose_name="@article-type",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_last_mod_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updater",
                    ),
                ),
            ],
            options={
                "verbose_name": "XML validation result",
                "verbose_name_plural": "XML validation results",
            },
        ),
        migrations.CreateModel(
            name="Package",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to=upload.models.upload_package_directory_path,
                        verbose_name="Package File",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        verbose_name="SPS Package name",
                    ),
                ),
                (
                    "signature",
                    models.CharField(
                        blank=True, max_length=32, null=True, verbose_name="Signature"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("update", "Atualizar"),
                            ("erratum", "Erratum"),
                            ("new-document", "New document"),
                        ],
                        max_length=32,
                        null=True,
                        verbose_name="Category",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("required-erratum", "Required erratum"),
                            ("required-update", "Required update"),
                            ("submitted", "Submetido"),
                            ("enqueued-for-validation", "Enqueued for validation"),
                            ("validated-with-errors", "Validated with errors"),
                            (
                                "pending-qa-decision",
                                "Pending quality analysis decision",
                            ),
                            ("pending-correction", "Pending for correction"),
                            ("unexpected", "Unexpected"),
                            ("ready-to-preview", "Ready to preview"),
                            ("preview", "Pr√©-visualizar"),
                            ("scheduled-publication", "Scheduled publication"),
                            ("ready-to-publish", "Ready to publish"),
                            ("published", "Publicado"),
                        ],
                        default="enqueued-for-validation",
                        max_length=32,
                        verbose_name="Status",
                    ),
                ),
                (
                    "qa_decision",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("pending-correction", "Pending for correction"),
                            ("ready-to-preview", "Ready to preview"),
                            ("ready-to-publish", "Ready to publish"),
                        ],
                        max_length=32,
                        null=True,
                        verbose_name="Quality analysis decision",
                    ),
                ),
                (
                    "qa_comment",
                    models.TextField(
                        blank=True, null=True, verbose_name="Quality analysis comment"
                    ),
                ),
                (
                    "expiration_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Expiration date"
                    ),
                ),
                ("numbers", models.JSONField(default=dict, null=True)),
                ("blocking_errors", models.PositiveSmallIntegerField(default=0)),
                (
                    "xml_errors_percentage",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "xml_warnings_percentage",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "contested_xml_errors_percentage",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "declared_impossible_to_fix_percentage",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                ("order", models.PositiveSmallIntegerField(default=0)),
                ("pid_v2", models.CharField(blank=True, max_length=23, null=True)),
                (
                    "analyst",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="team.collectionteammember",
                    ),
                ),
                (
                    "article",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="article.article",
                    ),
                ),
                (
                    "assignee",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "issue",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="issue.issue",
                    ),
                ),
                (
                    "journal",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="journal.journal",
                    ),
                ),
                (
                    "sps_pkg",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="package.spspkg",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_last_mod_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updater",
                    ),
                ),
            ],
            options={
                "permissions": (
                    ("finish_deposit", "Can finish deposit"),
                    ("access_all_packages", "Can access all packages from all users"),
                    ("assign_package", "Can assign package"),
                ),
            },
        ),
        migrations.CreateModel(
            name="ApprovedPackage",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("upload.package",),
        ),
        migrations.CreateModel(
            name="QAPackage",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("upload.package",),
        ),
        migrations.CreateModel(
            name="PackageZip",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to=upload.models.upload_package_directory_path,
                        verbose_name="Package File",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_last_mod_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updater",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="package",
            name="pkgzip",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="upload.packagezip",
            ),
        ),
        migrations.CreateModel(
            name="UploadProcResult",
            fields=[
                (
                    "operation_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="proc.operation",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "proc",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="upload_proc_result",
                        to="upload.package",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("proc.operation", models.Model),
        ),
        migrations.CreateModel(
            name="UploadValidator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "max_xml_warnings_percentage",
                    models.DecimalField(decimal_places=2, default=0.1, max_digits=5),
                ),
                (
                    "max_xml_errors_percentage",
                    models.DecimalField(decimal_places=2, default=0.1, max_digits=5),
                ),
                (
                    "max_impossible_to_fix_percentage",
                    models.DecimalField(decimal_places=2, default=0.05, max_digits=5),
                ),
                (
                    "days_in_qa_before_publication",
                    models.PositiveSmallIntegerField(
                        default=0,
                        help_text="Enter the number of days for quality control before publishing. Articles are automatically visible after this time.",
                    ),
                ),
                (
                    "decision_for_blocking_errors",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("pending-correction", "Pending for correction"),
                            ("validated-with-errors", "Validated with errors"),
                        ],
                        default="validated-with-errors",
                        max_length=32,
                        null=True,
                    ),
                ),
                (
                    "collection",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="collection.collection",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_last_mod_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updater",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ValidationReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="Title"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            (
                                "journal-incompatibility",
                                "ARTICLE_JOURNAL_COMPATIBILITY",
                            ),
                            ("article-is-not-new", "ARTICLE_IS_NOT_NEW"),
                            ("xml-format", "XML_FORMAT"),
                            ("xml-style", "XML_STYLE"),
                            ("xml-content", "VAL_CAT_XML_CONTENT"),
                            ("group", "VAL_CAT_GROUP_DATA"),
                            ("bibliometrics-data", "BIBLIOMETRICS_DATA"),
                            ("services-data", "SERVICES_DATA"),
                            ("data-consistency", "DATA_CONSISTENCY"),
                            ("criteria-issues", "CRITERIA_ISSUES"),
                            ("asset", "ASSET"),
                            ("rendition", "RENDITION"),
                            ("package-file", "PACKAGE_FILE"),
                        ],
                        max_length=32,
                        verbose_name="Validation category",
                    ),
                ),
                (
                    "creation",
                    models.CharField(
                        choices=[("done", "done"), ("doing", "doing"), ("", "")],
                        default="",
                        max_length=16,
                        verbose_name="creation",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "package",
                    modelcluster.fields.ParentalKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="validation_report",
                        to="upload.package",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_last_mod_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updater",
                    ),
                ),
            ],
            options={
                "verbose_name": "Validation Report",
                "verbose_name_plural": "Validation Reports",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PkgValidationResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        blank=True,
                        help_text="Item being analyzed",
                        max_length=64,
                        null=True,
                        verbose_name="Subject",
                    ),
                ),
                (
                    "data",
                    models.JSONField(
                        blank=True, default=dict, null=True, verbose_name="Data"
                    ),
                ),
                (
                    "message",
                    models.TextField(blank=True, null=True, verbose_name="Message"),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("CRITICAL", "critical"),
                            ("ERROR", "error"),
                            ("UKN", "unknown"),
                            ("WARN", "warning"),
                            ("OK", "ok"),
                        ],
                        default="UKN",
                        max_length=8,
                        null=True,
                        verbose_name="Result",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_last_mod_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updater",
                    ),
                ),
                (
                    "report",
                    modelcluster.fields.ParentalKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pkg_validation_result",
                        to="upload.validationreport",
                    ),
                ),
            ],
            options={
                "verbose_name": "Validation result",
                "verbose_name_plural": "Validation results",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="XMLErrorReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="Title"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            (
                                "journal-incompatibility",
                                "ARTICLE_JOURNAL_COMPATIBILITY",
                            ),
                            ("article-is-not-new", "ARTICLE_IS_NOT_NEW"),
                            ("xml-format", "XML_FORMAT"),
                            ("xml-style", "XML_STYLE"),
                            ("xml-content", "VAL_CAT_XML_CONTENT"),
                            ("group", "VAL_CAT_GROUP_DATA"),
                            ("bibliometrics-data", "BIBLIOMETRICS_DATA"),
                            ("services-data", "SERVICES_DATA"),
                            ("data-consistency", "DATA_CONSISTENCY"),
                            ("criteria-issues", "CRITERIA_ISSUES"),
                            ("asset", "ASSET"),
                            ("rendition", "RENDITION"),
                            ("package-file", "PACKAGE_FILE"),
                        ],
                        max_length=32,
                        verbose_name="Validation category",
                    ),
                ),
                (
                    "creation",
                    models.CharField(
                        choices=[("done", "done"), ("doing", "doing"), ("", "")],
                        default="",
                        max_length=16,
                        verbose_name="creation",
                    ),
                ),
                (
                    "xml_producer_ack",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        null=True,
                        verbose_name="The XML producer finished adding a response to each error.",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "package",
                    modelcluster.fields.ParentalKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="xml_error_report",
                        to="upload.package",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_last_mod_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updater",
                    ),
                ),
            ],
            options={
                "verbose_name": "XML Error Report",
                "verbose_name_plural": "XML Error Reports",
            },
        ),
        migrations.CreateModel(
            name="XMLInfoReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="Title"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            (
                                "journal-incompatibility",
                                "ARTICLE_JOURNAL_COMPATIBILITY",
                            ),
                            ("article-is-not-new", "ARTICLE_IS_NOT_NEW"),
                            ("xml-format", "XML_FORMAT"),
                            ("xml-style", "XML_STYLE"),
                            ("xml-content", "VAL_CAT_XML_CONTENT"),
                            ("group", "VAL_CAT_GROUP_DATA"),
                            ("bibliometrics-data", "BIBLIOMETRICS_DATA"),
                            ("services-data", "SERVICES_DATA"),
                            ("data-consistency", "DATA_CONSISTENCY"),
                            ("criteria-issues", "CRITERIA_ISSUES"),
                            ("asset", "ASSET"),
                            ("rendition", "RENDITION"),
                            ("package-file", "PACKAGE_FILE"),
                        ],
                        max_length=32,
                        verbose_name="Validation category",
                    ),
                ),
                (
                    "creation",
                    models.CharField(
                        choices=[("done", "done"), ("doing", "doing"), ("", "")],
                        default="",
                        max_length=16,
                        verbose_name="creation",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=upload.models.upload_package_directory_path,
                        verbose_name="Report File",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "package",
                    modelcluster.fields.ParentalKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="xml_info_report",
                        to="upload.package",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_last_mod_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updater",
                    ),
                ),
            ],
            options={
                "verbose_name": "Validation Report",
                "verbose_name_plural": "Validation Reports",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="XMLError",
            fields=[
                (
                    "basexmlvalidationresult_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="upload.basexmlvalidationresult",
                    ),
                ),
                (
                    "expected_value",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Expected value"
                    ),
                ),
                (
                    "got_value",
                    models.JSONField(blank=True, null=True, verbose_name="Got value"),
                ),
                (
                    "advice",
                    models.CharField(
                        blank=True, max_length=256, null=True, verbose_name="Advice"
                    ),
                ),
                (
                    "reaction",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("to-fix", "XML producer will fix this error"),
                            (
                                "unable-to-fix",
                                "XML producer declares that correction is impossible",
                            ),
                            (
                                "not-to-fix",
                                "XML producer disagrees that there is an error",
                            ),
                        ],
                        default="to-fix",
                        max_length=16,
                        null=True,
                        verbose_name="Reaction",
                    ),
                ),
                (
                    "qa_decision",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("accepted-with-error", "Accepted with errors"),
                            ("accepted", "Accepted"),
                            ("to-fix", "Correction required"),
                        ],
                        max_length=32,
                        null=True,
                        verbose_name="Decision",
                    ),
                ),
                (
                    "report",
                    modelcluster.fields.ParentalKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="xml_error",
                        to="upload.xmlerrorreport",
                    ),
                ),
            ],
            options={
                "verbose_name": "XML error",
                "verbose_name_plural": "XML errors",
            },
            bases=("upload.basexmlvalidationresult", models.Model),
        ),
        migrations.CreateModel(
            name="XMLInfo",
            fields=[
                (
                    "basexmlvalidationresult_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="upload.basexmlvalidationresult",
                    ),
                ),
                (
                    "report",
                    modelcluster.fields.ParentalKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="xml_info",
                        to="upload.xmlinforeport",
                    ),
                ),
            ],
            options={
                "verbose_name": "XML info",
                "verbose_name_plural": "XML infos",
            },
            bases=("upload.basexmlvalidationresult",),
        ),
        migrations.AddIndex(
            model_name="basexmlvalidationresult",
            index=models.Index(
                fields=["attribute"], name="upload_base_attribu_0d2852_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="basexmlvalidationresult",
            index=models.Index(
                fields=["validation_type"], name="upload_base_validat_2a2026_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="basexmlvalidationresult",
            index=models.Index(fields=["focus"], name="upload_base_focus_bf8b77_idx"),
        ),
        migrations.AddIndex(
            model_name="package",
            index=models.Index(
                fields=["category"], name="upload_pack_categor_3c1eb9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="package",
            index=models.Index(fields=["name"], name="upload_pack_name_97273b_idx"),
        ),
        migrations.AddIndex(
            model_name="package",
            index=models.Index(fields=["status"], name="upload_pack_status_12c5cd_idx"),
        ),
        migrations.AddIndex(
            model_name="package",
            index=models.Index(
                fields=["qa_decision"], name="upload_pack_qa_deci_da84e6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="package",
            index=models.Index(
                fields=["xml_errors_percentage"], name="upload_pack_xml_err_857b31_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="package",
            index=models.Index(
                fields=["xml_warnings_percentage"],
                name="upload_pack_xml_war_0f8004_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="package",
            index=models.Index(
                fields=["contested_xml_errors_percentage"],
                name="upload_pack_contest_707651_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="package",
            index=models.Index(
                fields=["declared_impossible_to_fix_percentage"],
                name="upload_pack_declare_0363e9_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="validationreport",
            index=models.Index(fields=["title"], name="upload_vali_title_30e1ae_idx"),
        ),
        migrations.AddIndex(
            model_name="validationreport",
            index=models.Index(
                fields=["creation"], name="upload_vali_creatio_5f93a9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="validationreport",
            index=models.Index(
                fields=["category"], name="upload_vali_categor_5773a0_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="validationreport",
            unique_together={("package", "title")},
        ),
        migrations.AddIndex(
            model_name="pkgvalidationresult",
            index=models.Index(
                fields=["subject"], name="upload_pkgv_subject_8d040f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pkgvalidationresult",
            index=models.Index(fields=["status"], name="upload_pkgv_status_13885b_idx"),
        ),
        migrations.AddIndex(
            model_name="xmlerrorreport",
            index=models.Index(
                fields=["xml_producer_ack"], name="upload_xmle_xml_pro_58d37e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="xmlinforeport",
            index=models.Index(fields=["title"], name="upload_xmli_title_9c8688_idx"),
        ),
        migrations.AddIndex(
            model_name="xmlinforeport",
            index=models.Index(
                fields=["creation"], name="upload_xmli_creatio_fea4f2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="xmlinforeport",
            index=models.Index(
                fields=["category"], name="upload_xmli_categor_694408_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="xmlinforeport",
            unique_together={("package", "title")},
        ),
        migrations.AddIndex(
            model_name="xmlerror",
            index=models.Index(
                fields=["reaction"], name="upload_xmle_reactio_07a23a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="xmlerror",
            index=models.Index(
                fields=["qa_decision"], name="upload_xmle_qa_deci_e3f7ce_idx"
            ),
        ),
    ]
