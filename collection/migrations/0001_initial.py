# Generated by Django 3.2.12 on 2023-01-26 23:23

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NewWebSiteConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last update date')),
                ('url', models.CharField(blank=True, max_length=255, null=True, verbose_name='New website url')),
                ('db_uri', models.CharField(blank=True, help_text='mongodb://login:password@host:port/database', max_length=255, null=True, verbose_name='Mongodb Info')),
                ('creator', models.ForeignKey(editable=False, on_delete=models.SET(core.models.get_sentinel_user), related_name='newwebsiteconfiguration_creator', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='newwebsiteconfiguration_last_mod_user', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last update date')),
                ('acron', models.CharField(blank=True, max_length=255, null=True, verbose_name='Collection Acronym')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Collection Name')),
                ('creator', models.ForeignKey(editable=False, on_delete=models.SET(core.models.get_sentinel_user), related_name='collection_creator', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collection_last_mod_user', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
            ],
        ),
        migrations.CreateModel(
            name='ClassicWebsiteConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last update date')),
                ('title_path', models.CharField(blank=True, help_text='Title path: title.id path or title.mst path without extension', max_length=255, null=True, verbose_name='Title path')),
                ('issue_path', models.CharField(blank=True, help_text='Issue path: issue.id path or issue.mst path without extension', max_length=255, null=True, verbose_name='Issue path')),
                ('serial_path', models.CharField(blank=True, help_text='Serial path', max_length=255, null=True, verbose_name='Serial path')),
                ('cisis_path', models.CharField(blank=True, help_text='Cisis path where there are CISIS utilities such as mx and i2id', max_length=255, null=True, verbose_name='Cisis path')),
                ('bases_work_path', models.CharField(blank=True, help_text='Bases work path', max_length=255, null=True, verbose_name='Bases work path')),
                ('bases_pdf_path', models.CharField(blank=True, help_text='Bases translation path', max_length=255, null=True, verbose_name='Bases pdf path')),
                ('bases_translation_path', models.CharField(blank=True, help_text='Bases translation path', max_length=255, null=True, verbose_name='Bases translation path')),
                ('bases_xml_path', models.CharField(blank=True, help_text='Bases XML path', max_length=255, null=True, verbose_name='Bases XML path')),
                ('htdocs_img_revistas_path', models.CharField(blank=True, help_text='Htdocs img revistas path', max_length=255, null=True, verbose_name='Htdocs img revistas path')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='collection.collection')),
                ('creator', models.ForeignKey(editable=False, on_delete=models.SET(core.models.get_sentinel_user), related_name='classicwebsiteconfiguration_creator', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classicwebsiteconfiguration_last_mod_user', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
            ],
        ),
        migrations.AddIndex(
            model_name='newwebsiteconfiguration',
            index=models.Index(fields=['url'], name='collection__url_aaa55d_idx'),
        ),
        migrations.AddIndex(
            model_name='collection',
            index=models.Index(fields=['name'], name='collection__name_7a1ded_idx'),
        ),
        migrations.AddIndex(
            model_name='collection',
            index=models.Index(fields=['acron'], name='collection__acron_6d1a91_idx'),
        ),
        migrations.AddIndex(
            model_name='classicwebsiteconfiguration',
            index=models.Index(fields=['collection'], name='collection__collect_565bb2_idx'),
        ),
    ]
