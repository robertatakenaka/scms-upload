# Generated by Django 3.2.18 on 2023-05-04 14:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("article", "0004_alter_article_article_type"),
        ("files_storage", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="PidRequesterBadRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "basename",
                    models.TextField(blank=True, null=True, verbose_name="Basename"),
                ),
                (
                    "finger_print",
                    models.CharField(blank=True, max_length=65, null=True),
                ),
                ("error_type", models.TextField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("xml", models.FileField(upload_to="bad_request")),
            ],
        ),
        migrations.CreateModel(
            name="PidRequesterXML",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "pkg_name",
                    models.TextField(
                        blank=True, null=True, verbose_name="Package name"
                    ),
                ),
                (
                    "v3",
                    models.CharField(
                        blank=True, max_length=23, null=True, verbose_name="v3"
                    ),
                ),
                (
                    "v2",
                    models.CharField(
                        blank=True, max_length=23, null=True, verbose_name="v2"
                    ),
                ),
                (
                    "aop_pid",
                    models.CharField(
                        blank=True, max_length=23, null=True, verbose_name="AOP PID"
                    ),
                ),
                (
                    "elocation_id",
                    models.TextField(
                        blank=True, null=True, verbose_name="elocation id"
                    ),
                ),
                (
                    "fpage",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="fpage"
                    ),
                ),
                (
                    "fpage_seq",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="fpage_seq"
                    ),
                ),
                (
                    "lpage",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="lpage"
                    ),
                ),
                (
                    "article_pub_year",
                    models.CharField(
                        blank=True,
                        max_length=4,
                        null=True,
                        verbose_name="Document Publication Year",
                    ),
                ),
                (
                    "main_toc_section",
                    models.TextField(
                        blank=True, null=True, verbose_name="main_toc_section"
                    ),
                ),
                (
                    "main_doi",
                    models.TextField(blank=True, null=True, verbose_name="DOI"),
                ),
                (
                    "z_article_titles_texts",
                    models.CharField(
                        blank=True,
                        max_length=64,
                        null=True,
                        verbose_name="article_titles_texts",
                    ),
                ),
                (
                    "z_surnames",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="surnames"
                    ),
                ),
                (
                    "z_collab",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="collab"
                    ),
                ),
                (
                    "z_links",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="links"
                    ),
                ),
                (
                    "z_partial_body",
                    models.CharField(
                        blank=True,
                        max_length=64,
                        null=True,
                        verbose_name="partial_body",
                    ),
                ),
                (
                    "synchronized",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SyncFailure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "message",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Mensagem"
                    ),
                ),
                (
                    "exception_type",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Exception Type",
                    ),
                ),
                (
                    "exception_msg",
                    models.CharField(
                        blank=True,
                        max_length=555,
                        null=True,
                        verbose_name="Exception Msg",
                    ),
                ),
                ("traceback", models.JSONField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="XMLIssue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "pub_year",
                    models.CharField(
                        blank=True, max_length=4, null=True, verbose_name="pub_year"
                    ),
                ),
                (
                    "volume",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="volume"
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="number"
                    ),
                ),
                (
                    "suppl",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="suppl"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="XMLJournal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "issn_electronic",
                    models.CharField(
                        blank=True, max_length=9, null=True, verbose_name="issn_epub"
                    ),
                ),
                (
                    "issn_print",
                    models.CharField(
                        blank=True, max_length=9, null=True, verbose_name="issn_ppub"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="XMLVersion",
            fields=[
                (
                    "miniofile_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="files_storage.miniofile",
                    ),
                ),
                (
                    "finger_print",
                    models.CharField(blank=True, max_length=65, null=True),
                ),
                (
                    "xml_doc_pid",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pid_requester.pidrequesterxml",
                    ),
                ),
            ],
            bases=("files_storage.miniofile",),
        ),
        migrations.CreateModel(
            name="XMLRelatedItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "main_doi",
                    models.TextField(blank=True, null=True, verbose_name="DOI"),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="xmlrelateditem_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="xmlrelateditem_last_mod_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updater",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="xmljournal",
            index=models.Index(
                fields=["issn_electronic"], name="pid_request_issn_el_73959a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="xmljournal",
            index=models.Index(
                fields=["issn_print"], name="pid_request_issn_pr_9ffcd5_idx"
            ),
        ),
        migrations.AddField(
            model_name="xmlissue",
            name="journal",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="pid_requester.xmljournal",
            ),
        ),
        migrations.AddField(
            model_name="syncfailure",
            name="creator",
            field=models.ForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="syncfailure_creator",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Creator",
            ),
        ),
        migrations.AddField(
            model_name="syncfailure",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="syncfailure_last_mod_user",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updater",
            ),
        ),
        migrations.AddField(
            model_name="pidrequesterxml",
            name="article",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="article.article",
            ),
        ),
        migrations.AddField(
            model_name="pidrequesterxml",
            name="creator",
            field=models.ForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="pidrequesterxml_creator",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Creator",
            ),
        ),
        migrations.AddField(
            model_name="pidrequesterxml",
            name="current_version",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="pid_requester.xmlversion",
            ),
        ),
        migrations.AddField(
            model_name="pidrequesterxml",
            name="issue",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="pid_requester.xmlissue",
            ),
        ),
        migrations.AddField(
            model_name="pidrequesterxml",
            name="journal",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="pid_requester.xmljournal",
            ),
        ),
        migrations.AddField(
            model_name="pidrequesterxml",
            name="related_items",
            field=models.ManyToManyField(to="pid_requester.XMLRelatedItem"),
        ),
        migrations.AddField(
            model_name="pidrequesterxml",
            name="sync_failure",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="pid_requester.syncfailure",
            ),
        ),
        migrations.AddField(
            model_name="pidrequesterxml",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="pidrequesterxml_last_mod_user",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updater",
            ),
        ),
        migrations.AddField(
            model_name="pidrequesterbadrequest",
            name="creator",
            field=models.ForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="pidrequesterbadrequest_creator",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Creator",
            ),
        ),
        migrations.AddField(
            model_name="pidrequesterbadrequest",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="pidrequesterbadrequest_last_mod_user",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updater",
            ),
        ),
        migrations.AddIndex(
            model_name="xmlversion",
            index=models.Index(
                fields=["finger_print"], name="pid_request_finger__a8f03a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="xmlrelateditem",
            index=models.Index(
                fields=["main_doi"], name="pid_request_main_do_892ce7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="xmlissue",
            index=models.Index(
                fields=["journal"], name="pid_request_journal_3a7c7c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="xmlissue",
            index=models.Index(fields=["volume"], name="pid_request_volume_9d0900_idx"),
        ),
        migrations.AddIndex(
            model_name="xmlissue",
            index=models.Index(fields=["number"], name="pid_request_number_419451_idx"),
        ),
        migrations.AddIndex(
            model_name="xmlissue",
            index=models.Index(fields=["suppl"], name="pid_request_suppl_88c1ad_idx"),
        ),
        migrations.AddIndex(
            model_name="xmlissue",
            index=models.Index(
                fields=["pub_year"], name="pid_request_pub_yea_820f9b_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="xmlissue",
            unique_together={("journal", "pub_year", "volume", "number", "suppl")},
        ),
        migrations.AddIndex(
            model_name="pidrequesterxml",
            index=models.Index(
                fields=["pkg_name"], name="pid_request_pkg_nam_7b2300_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pidrequesterxml",
            index=models.Index(fields=["v3"], name="pid_request_v3_ebfe0b_idx"),
        ),
        migrations.AddIndex(
            model_name="pidrequesterxml",
            index=models.Index(
                fields=["journal"], name="pid_request_journal_8f1cc8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pidrequesterxml",
            index=models.Index(fields=["issue"], name="pid_request_issue_i_428403_idx"),
        ),
        migrations.AddIndex(
            model_name="pidrequesterxml",
            index=models.Index(
                fields=["elocation_id"], name="pid_request_elocati_e53339_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pidrequesterxml",
            index=models.Index(fields=["fpage"], name="pid_request_fpage_2cea54_idx"),
        ),
        migrations.AddIndex(
            model_name="pidrequesterxml",
            index=models.Index(
                fields=["fpage_seq"], name="pid_request_fpage_s_48729f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pidrequesterxml",
            index=models.Index(fields=["lpage"], name="pid_request_lpage_1e6d01_idx"),
        ),
        migrations.AddIndex(
            model_name="pidrequesterxml",
            index=models.Index(
                fields=["article_pub_year"], name="pid_request_article_32301e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pidrequesterxml",
            index=models.Index(
                fields=["main_doi"], name="pid_request_main_do_c008d9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pidrequesterxml",
            index=models.Index(
                fields=["z_article_titles_texts"], name="pid_request_z_artic_d0e85f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pidrequesterxml",
            index=models.Index(
                fields=["z_surnames"], name="pid_request_z_surna_5cce17_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pidrequesterxml",
            index=models.Index(
                fields=["z_collab"], name="pid_request_z_colla_6c1f96_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pidrequesterxml",
            index=models.Index(
                fields=["z_links"], name="pid_request_z_links_3e4323_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pidrequesterxml",
            index=models.Index(
                fields=["z_partial_body"], name="pid_request_z_parti_cd6fd8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pidrequesterxml",
            index=models.Index(
                fields=["synchronized"], name="pid_request_synchro_6dc335_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pidrequesterbadrequest",
            index=models.Index(
                fields=["basename"], name="pid_request_basenam_f800ef_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pidrequesterbadrequest",
            index=models.Index(
                fields=["finger_print"], name="pid_request_finger__9895a0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pidrequesterbadrequest",
            index=models.Index(
                fields=["error_type"], name="pid_request_error_t_054c00_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pidrequesterbadrequest",
            index=models.Index(
                fields=["error_message"], name="pid_request_error_m_74bac3_idx"
            ),
        ),
    ]
