# Generated by Django 3.2.12 on 2023-01-26 23:23

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('journal', '0002_auto_20230126_2323'),
        ('issue', '0004_auto_20230126_2323'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('collection', '0001_initial'),
        ('files_storage', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MigratedData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last update date')),
                ('isis_updated_date', models.CharField(blank=True, max_length=8, null=True, verbose_name='ISIS updated date')),
                ('isis_created_date', models.CharField(blank=True, max_length=8, null=True, verbose_name='ISIS created date')),
                ('data', models.JSONField(blank=True, null=True)),
                ('status', models.CharField(choices=[('TO_MIGRATE', 'To migrate'), ('TO_IGNORE', 'To ignore'), ('IMPORTED', 'Imported'), ('PUBLISHED', 'Publicado')], default='TO_MIGRATE', max_length=20, verbose_name='Status')),
                ('creator', models.ForeignKey(editable=False, on_delete=models.SET(core.models.get_sentinel_user), related_name='migrateddata_creator', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
            ],
        ),
        migrations.CreateModel(
            name='MigratedDocument',
            fields=[
                ('migrateddata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='migration.migrateddata')),
                ('pid', models.CharField(blank=True, max_length=23, null=True, verbose_name='PID')),
                ('key', models.CharField(blank=True, max_length=50, null=True, verbose_name='File key')),
                ('main_lang', models.CharField(blank=True, choices=[('aa', 'Afar'), ('af', 'Afrikaans'), ('ak', 'Akan'), ('sq', 'Albanian'), ('am', 'Amharic'), ('ar', 'Arabic'), ('an', 'Aragonese'), ('hy', 'Armenian'), ('as', 'Assamese'), ('av', 'Avaric'), ('ae', 'Avestan'), ('ay', 'Aymara'), ('az', 'Azerbaijani'), ('bm', 'Bambara'), ('ba', 'Bashkir'), ('eu', 'Basque'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('bi', 'Bislama'), ('bs', 'Bosnian'), ('br', 'Breton'), ('bg', 'Bulgarian'), ('my', 'Burmese'), ('ca', 'Catalan, Valencian'), ('ch', 'Chamorro'), ('ce', 'Chechen'), ('ny', 'Chichewa, Chewa, Nyanja'), ('zh', 'Chinese'), ('cu', 'Church Slavic, Old Slavonic, Church Slavonic, Old Bulgarian, Old Church Slavonic'), ('cv', 'Chuvash'), ('kw', 'Cornish'), ('co', 'Corsican'), ('cr', 'Cree'), ('hr', 'Croatian'), ('cs', 'Czech'), ('da', 'Danish'), ('dv', 'Divehi, Dhivehi, Maldivian'), ('nl', 'Dutch, Flemish'), ('dz', 'Dzongkha'), ('en', 'English'), ('eo', 'Esperanto'), ('et', 'Estonian'), ('ee', 'Ewe'), ('fo', 'Faroese'), ('fj', 'Fijian'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Western Frisian'), ('ff', 'Fulah'), ('gd', 'Gaelic, Scottish Gaelic'), ('gl', 'Galician'), ('lg', 'Ganda'), ('ka', 'Georgian'), ('de', 'German'), ('el', 'Greek, Modern (1453–)'), ('kl', 'Kalaallisut, Greenlandic'), ('gn', 'Guarani'), ('gu', 'Gujarati'), ('ht', 'Haitian, Haitian Creole'), ('ha', 'Hausa'), ('he', 'Hebrew'), ('hz', 'Herero'), ('hi', 'Hindi'), ('ho', 'Hiri Motu'), ('hu', 'Hungarian'), ('is', 'Icelandic'), ('io', 'Ido'), ('ig', 'Igbo'), ('id', 'Indonesian'), ('ia', 'Interlingua (International Auxiliary Language Association)'), ('ie', 'Interlingue, Occidental'), ('iu', 'Inuktitut'), ('ik', 'Inupiaq'), ('ga', 'Irish'), ('it', 'Italian'), ('ja', 'Japanese'), ('jv', 'Javanese'), ('kn', 'Kannada'), ('kr', 'Kanuri'), ('ks', 'Kashmiri'), ('kk', 'Kazakh'), ('km', 'Central Khmer'), ('ki', 'Kikuyu, Gikuyu'), ('rw', 'Kinyarwanda'), ('ky', 'Kirghiz, Kyrgyz'), ('kv', 'Komi'), ('kg', 'Kongo'), ('ko', 'Korean'), ('kj', 'Kuanyama, Kwanyama'), ('ku', 'Kurdish'), ('lo', 'Lao'), ('la', 'Latin'), ('lv', 'Latvian'), ('li', 'Limburgan, Limburger, Limburgish'), ('ln', 'Lingala'), ('lt', 'Lithuanian'), ('lu', 'Luba-Katanga'), ('lb', 'Luxembourgish, Letzeburgesch'), ('mk', 'Macedonian'), ('mg', 'Malagasy'), ('ms', 'Malay'), ('ml', 'Malayalam'), ('mt', 'Maltese'), ('gv', 'Manx'), ('mi', 'Maori'), ('mr', 'Marathi'), ('mh', 'Marshallese'), ('mn', 'Mongolian'), ('na', 'Nauru'), ('nv', 'Navajo, Navaho'), ('nd', 'North Ndebele'), ('nr', 'South Ndebele'), ('ng', 'Ndonga'), ('ne', 'Nepali'), ('no', 'Norwegian'), ('nb', 'Norwegian Bokmål'), ('nn', 'Norwegian Nynorsk'), ('ii', 'Sichuan Yi, Nuosu'), ('oc', 'Occitan'), ('oj', 'Ojibwa'), ('or', 'Oriya'), ('om', 'Oromo'), ('os', 'Ossetian, Ossetic'), ('pi', 'Pali'), ('ps', 'Pashto, Pushto'), ('fa', 'Persian'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pa', 'Punjabi, Panjabi'), ('qu', 'Quechua'), ('ro', 'Romanian, Moldavian, Moldovan'), ('rm', 'Romansh'), ('rn', 'Rundi'), ('ru', 'Russian'), ('se', 'Northern Sami'), ('sm', 'Samoan'), ('sg', 'Sango'), ('sa', 'Sanskrit'), ('sc', 'Sardinian'), ('sr', 'Serbian'), ('sn', 'Shona'), ('sd', 'Sindhi'), ('si', 'Sinhala, Sinhalese'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('so', 'Somali'), ('st', 'Southern Sotho'), ('es', 'Spanish, Castilian'), ('su', 'Sundanese'), ('sw', 'Swahili'), ('ss', 'Swati'), ('sv', 'Swedish'), ('tl', 'Tagalog'), ('ty', 'Tahitian'), ('tg', 'Tajik'), ('ta', 'Tamil'), ('tt', 'Tatar'), ('te', 'Telugu'), ('th', 'Thai'), ('bo', 'Tibetan'), ('ti', 'Tigrinya'), ('to', 'Tonga (Tonga Islands)'), ('ts', 'Tsonga'), ('tn', 'Tswana'), ('tr', 'Turkish'), ('tk', 'Turkmen'), ('tw', 'Twi'), ('ug', 'Uighur, Uyghur'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('uz', 'Uzbek'), ('ve', 'Venda'), ('vi', 'Vietnamese'), ('vo', 'Volapük'), ('wa', 'Walloon'), ('cy', 'Welsh'), ('wo', 'Wolof'), ('xh', 'Xhosa'), ('yi', 'Yiddish'), ('yo', 'Yoruba'), ('za', 'Zhuang, Chuang'), ('zu', 'Zulu')], max_length=5, null=True, verbose_name='Language')),
                ('files_status', models.CharField(choices=[('TO_MIGRATE', 'To migrate'), ('TO_IGNORE', 'To ignore'), ('IMPORTED', 'Imported'), ('PUBLISHED', 'Publicado')], default='TO_MIGRATE', max_length=20, verbose_name='Status')),
            ],
            bases=('migration.migrateddata',),
        ),
        migrations.CreateModel(
            name='MigratedIssue',
            fields=[
                ('migrateddata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='migration.migrateddata')),
                ('issue_pid', models.CharField(max_length=23, verbose_name='Issue PID')),
                ('issue_folder', models.CharField(max_length=23, verbose_name='Issue Folder')),
                ('files_status', models.CharField(choices=[('TO_MIGRATE', 'To migrate'), ('TO_IGNORE', 'To ignore'), ('IMPORTED', 'Imported'), ('PUBLISHED', 'Publicado')], default='TO_MIGRATE', max_length=20, verbose_name='Status')),
                ('files', models.JSONField(blank=True, null=True)),
            ],
            bases=('migration.migrateddata',),
        ),
        migrations.CreateModel(
            name='MigratedJournal',
            fields=[
                ('migrateddata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='migration.migrateddata')),
                ('scielo_issn', models.CharField(max_length=9, verbose_name='SciELO ISSN')),
                ('acron', models.CharField(blank=True, max_length=25, null=True, verbose_name='Acronym')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('availability_status', models.CharField(blank=True, choices=[('?', 'Unknown'), ('C', 'Current')], max_length=10, null=True, verbose_name='Availability Status')),
            ],
            bases=('migration.migrateddata',),
        ),
        migrations.CreateModel(
            name='MigrationFailure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last update date')),
                ('action_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Action')),
                ('message', models.CharField(blank=True, max_length=255, null=True, verbose_name='Message')),
                ('exception_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Exception Type')),
                ('exception_msg', models.CharField(blank=True, max_length=555, null=True, verbose_name='Exception Msg')),
                ('traceback', models.JSONField(blank=True, null=True)),
                ('creator', models.ForeignKey(editable=False, on_delete=models.SET(core.models.get_sentinel_user), related_name='migrationfailure_creator', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='migrationfailure_last_mod_user', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
            ],
        ),
        migrations.CreateModel(
            name='MigrationConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last update date')),
                ('classic_website_config', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='collection.classicwebsiteconfiguration', verbose_name='Classic website configuration')),
                ('creator', models.ForeignKey(editable=False, on_delete=models.SET(core.models.get_sentinel_user), related_name='migrationconfiguration_creator', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('migration_files_storage_config', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='migration_files_storage_config', to='files_storage.minioconfiguration', verbose_name='Migration Files Storage Configuration')),
                ('new_website_config', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='collection.newwebsiteconfiguration', verbose_name='New website configuration')),
                ('public_files_storage_config', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='public_files_storage_config', to='files_storage.minioconfiguration', verbose_name='Public Files Storage Configuration')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='migrationconfiguration_last_mod_user', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
            ],
        ),
        migrations.AddField(
            model_name='migrateddata',
            name='failures',
            field=models.ManyToManyField(to='migration.MigrationFailure'),
        ),
        migrations.AddField(
            model_name='migrateddata',
            name='updated_by',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='migrateddata_last_mod_user', to=settings.AUTH_USER_MODEL, verbose_name='Updater'),
        ),
        migrations.AddIndex(
            model_name='migrationfailure',
            index=models.Index(fields=['action_name'], name='migration_m_action__031324_idx'),
        ),
        migrations.AddIndex(
            model_name='migrationconfiguration',
            index=models.Index(fields=['classic_website_config'], name='migration_m_classic_518e10_idx'),
        ),
        migrations.AddField(
            model_name='migratedjournal',
            name='collection',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='collection.collection'),
        ),
        migrations.AddField(
            model_name='migratedjournal',
            name='official_journal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='journal.officialjournal'),
        ),
        migrations.AddField(
            model_name='migratedissue',
            name='assets',
            field=models.ManyToManyField(to='files_storage.AssetFile'),
        ),
        migrations.AddField(
            model_name='migratedissue',
            name='htmls',
            field=models.ManyToManyField(to='files_storage.SciELOHTMLFile'),
        ),
        migrations.AddField(
            model_name='migratedissue',
            name='migrated_journal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='migration.migratedjournal'),
        ),
        migrations.AddField(
            model_name='migratedissue',
            name='official_issue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='issue.issue'),
        ),
        migrations.AddField(
            model_name='migratedissue',
            name='pdfs',
            field=models.ManyToManyField(related_name='pdfs', to='files_storage.FileWithLang'),
        ),
        migrations.AddField(
            model_name='migratedissue',
            name='xmls',
            field=models.ManyToManyField(to='files_storage.XMLFile'),
        ),
        migrations.AddField(
            model_name='migrateddocument',
            name='html_files',
            field=models.ManyToManyField(related_name='html_files', to='files_storage.SciELOHTMLFile'),
        ),
        migrations.AddField(
            model_name='migrateddocument',
            name='migrated_issue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='migration.migratedissue'),
        ),
        migrations.AddField(
            model_name='migrateddocument',
            name='rendition_files',
            field=models.ManyToManyField(related_name='article_pdfs', to='files_storage.FileWithLang'),
        ),
        migrations.AddField(
            model_name='migrateddocument',
            name='xml_body_files',
            field=models.ManyToManyField(related_name='xml_body_files', to='files_storage.BodyAndBackXMLFile'),
        ),
        migrations.AddField(
            model_name='migrateddocument',
            name='xml_files',
            field=models.ManyToManyField(to='files_storage.XMLFile'),
        ),
        migrations.AddIndex(
            model_name='migrateddata',
            index=models.Index(fields=['isis_updated_date'], name='migration_m_isis_up_c84dc4_idx'),
        ),
        migrations.AddIndex(
            model_name='migrateddata',
            index=models.Index(fields=['status'], name='migration_m_status_9aee95_idx'),
        ),
        migrations.AddIndex(
            model_name='migratedjournal',
            index=models.Index(fields=['acron'], name='migration_m_acron_e532c4_idx'),
        ),
        migrations.AddIndex(
            model_name='migratedjournal',
            index=models.Index(fields=['collection'], name='migration_m_collect_5e7ae9_idx'),
        ),
        migrations.AddIndex(
            model_name='migratedjournal',
            index=models.Index(fields=['scielo_issn'], name='migration_m_scielo__7cd3bb_idx'),
        ),
        migrations.AddIndex(
            model_name='migratedjournal',
            index=models.Index(fields=['availability_status'], name='migration_m_availab_7567e1_idx'),
        ),
        migrations.AddIndex(
            model_name='migratedjournal',
            index=models.Index(fields=['official_journal'], name='migration_m_officia_3371a2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='migratedjournal',
            unique_together={('collection', 'acron'), ('collection', 'scielo_issn')},
        ),
        migrations.AddIndex(
            model_name='migratedissue',
            index=models.Index(fields=['migrated_journal'], name='migration_m_migrate_867c9e_idx'),
        ),
        migrations.AddIndex(
            model_name='migratedissue',
            index=models.Index(fields=['official_issue'], name='migration_m_officia_de23ae_idx'),
        ),
        migrations.AddIndex(
            model_name='migratedissue',
            index=models.Index(fields=['issue_pid'], name='migration_m_issue_p_c1f81b_idx'),
        ),
        migrations.AddIndex(
            model_name='migratedissue',
            index=models.Index(fields=['issue_folder'], name='migration_m_issue_f_e732cc_idx'),
        ),
        migrations.AddIndex(
            model_name='migratedissue',
            index=models.Index(fields=['files_status'], name='migration_m_files_s_5ed1b0_idx'),
        ),
        migrations.AddIndex(
            model_name='migrateddocument',
            index=models.Index(fields=['migrated_issue'], name='migration_m_migrate_db24e4_idx'),
        ),
        migrations.AddIndex(
            model_name='migrateddocument',
            index=models.Index(fields=['pid'], name='migration_m_pid_9c9c5b_idx'),
        ),
        migrations.AddIndex(
            model_name='migrateddocument',
            index=models.Index(fields=['key'], name='migration_m_key_a239ad_idx'),
        ),
        migrations.AddIndex(
            model_name='migrateddocument',
            index=models.Index(fields=['main_lang'], name='migration_m_main_la_58b6eb_idx'),
        ),
        migrations.AddIndex(
            model_name='migrateddocument',
            index=models.Index(fields=['files_status'], name='migration_m_files_s_49b576_idx'),
        ),
    ]
